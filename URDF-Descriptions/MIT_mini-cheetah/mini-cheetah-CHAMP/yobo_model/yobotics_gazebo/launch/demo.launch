<launch>
    <arg name="paused" default="true"/>
    <arg name="use_sim_time" default="true"/>
    <arg name="gui" default="true"/>
    <arg name="headless" default="false"/>
    <arg name="debug" default="false"/>
    <!-- Debug mode will hung up the robot, use "true" or "false" to switch it. -->
    <arg name="user_debug" default="false"/>
     <arg name="description_file"           default="$(find yobotics_description)/xacro/robot_with_kinect.xacro"/>
     <arg name="ros_control_file" default="$(find yobotics_gazebo)/config/ros_control.yaml" />
    
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(find yobotics_gazebo)/launch/world/normal.world"/> 
        <arg name="debug" value="$(arg debug)"/>
        <arg name="gui" value="$(arg gui)"/>
        <arg name="paused" value="$(arg paused)"/>
        <arg name="use_sim_time" value="$(arg use_sim_time)"/>
        <arg name="headless" value="$(arg headless)"/>
    </include>
 
    <!-- Load the URDF into the ROS Parameter Server -->
      <param name="robot_description"
           command="$(find xacro)/xacro --inorder '$(arg description_file)' DEBUG:=$(arg user_debug)"/>
  
    <!-- Set trunk and joint positions at startup -->
    <node pkg="gazebo_ros" type="spawn_model" name="urdf_spawner" respawn="false" output="screen"
          args="-urdf -z 0.5 -model yobotics_gazebo -param robot_description -unpause "/>

    <!-- Load joint controller configurations from YAML file to parameter server -->
      <rosparam file="$(arg ros_control_file)" command="load"/>
        <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="
            joint_states_controller
            joint_group_position_controller
            ">
        </node>

    <!-- convert joint states to TF transforms for rviz, etc -->
    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher"
          respawn="false" output="screen">
        <remap from="/joint_states" to="/yobotics_gazebo/joint_states"/>
    </node>

   

    <!-- <node pkg="yobotics_gazebo" type="servo" name="servo" required="true" output="screen"/> -->

</launch>
